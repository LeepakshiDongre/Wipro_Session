CREATE TABLE Students (
    StudentID INT PRIMARY KEY,
	FirstName VARCHAR(50),
	Marks INT,
	DOB DATE
);


INSERT INTO Students (StudentID, FirstName, Marks, DOB)
VALUES
(1, 'Amit', 92, '2003-05-10'),
(2, 'Neha', 78, '2002-11-15'),
(3, 'Rahul', 61, '2003-01-20'),
(4, 'Sneha', 49, '2003-09-01');


CREATE TABLE Employees (
    EmpID INT PRIMARY KEY,
	Name VARCHAR(50),
	Department VARCHAR(50),
	Salary DECIMAL(10,2),
	JoinDate DATE
);

INSERT INTO Employees(EmpID, Name, Department, Salary, JoinDate)
VALUES
(1, 'John', 'HR', 50000, '2021-06-01'),
(2, 'Priya', 'Finance', 60000, '2020-09-15'),
(3, 'Amit', 'IT', 75000, '2019-01-10'),
(4, 'Sara', 'IT', 72000, '2023-02-25');




//SCALAR FUNCTION EXAMPLE

//1. Convert student names to uppercase
SELECT FirstName, UPPER(FirstName) AS UpperName FROM Students;


//2.Get age of each student
SELECT FirstName, DATEDIFF(YEAR, DOB, GETDATE()) AS Age FROM Students;

//3. Round off salary to nearest 1000
SELECT Name, ROUND(Salary, -3) AS RoundedSalary FROM Employees;



//AGGREGATE FUNCTION EXAMPLES

//3.Total number of Students
SELECT COUNT(*) AS TotalStudents FROM Students;

// 4. Average marks of all Students
SELECT AVG(Marks) AS AverageMarks FROM Students;

//5. Highest Salary in each Department
SELECT Department, MAX(Salary) AS HigherSalary
FROM Employees
GROUP BY Department;



//CASE EXPRESSION EXAMPLE

//7. GRADE STUDENTS BASED ON Marks
SELECT FirstName, Marks, 
    CASE
	   WHEN Marks >= 90 THEN 'A'
	   WHEN Marks >= 75 THEN 'B'
	   WHEN Marks >= 60 THEN 'C'
	   ELSE 'D'
	END AS Grade
FROM Students;

//8. Categorize employees by salary
SELECT Name, Salary,
    CASE
	   WHEN Salary >= 70000 THEN 'High'
	   WHEN Salary >= 50000 THEN 'Medium'
	   ELSE 'LOW'
	END AS SalaryBand 
FROM Employees;



